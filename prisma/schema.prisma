// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// model Session {
//   id        String   @id
//   sid       String   @unique
//   expiresAt DateTime
//   data      String?
// }

model Author {
  id           String    @id @default(uuid())
  username     String    @unique
  passwordHash String
  createdAt    DateTime  @default(now())
  Post         Post[]
  Comment      Comment[]
}

model User {
  id           String    @id @default(uuid())
  username     String    @unique
  passwordHash String
  createdAt    DateTime  @default(now())
  Comment      Comment[]
}

model Post {
  id        String    @id @default(uuid())
  title     String    @unique
  text      String
  createdAt DateTime  @default(now())
  author    Author    @relation(fields: [authorId], references: [id])
  authorId  String
  published Boolean
  Comment   Comment[]
}

model Comment {
  id              Int      @id @default(autoincrement())
  text            String
  createdAt       DateTime @default(now())
  commentByUser   User?    @relation(fields: [userId], references: [id])
  userId          String?
  commentByAuthor Author?  @relation(fields: [authorId], references: [id])
  authorId        String?

  parent   Post   @relation(fields: [parentId], references: [id], onDelete: Cascade)
  parentId String
}
